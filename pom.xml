<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.vaadin.flow.demo</groupId>
    <artifactId>bakery-app-starter-flow-spring</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.4.RELEASE</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <!-- Dependencies -->
        <vaadin.version>10.0.0.alpha8</vaadin.version>

        <spring-boot.version>1.5.8.RELEASE</spring-boot.version>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <!-- Overrides the old version specified by the Spring Boot parent -->
        <selenium.version>3.6.0</selenium.version>
        <!-- Override Hibernate version to get Java 8 date/time support -->
        <hibernate.version>5.2.12.Final</hibernate.version>

        <!-- Plugins -->
        <frontend.maven.plugin.version>1.6</frontend.maven.plugin.version>
        <maven.war.plugin.version>3.1.0</maven.war.plugin.version>
        <maven.resources.plugin.version>3.0.2</maven.resources.plugin.version>
        <maven.clean.plugin.version>3.0.0</maven.clean.plugin.version>

        <!-- Frontend -->
        <node.version>v8.1.2</node.version>
        <yarn.version>v0.27.5</yarn.version>
        <buildtools.directory>build-tools</buildtools.directory>
        <frontend.directory>src/main/webapp/frontend</frontend.directory>
    </properties>

    <repositories>
        <repository>
            <id>flow-internal-release</id>
            <url>https://repo.vaadin.com/nexus/content/repositories/flow</url>
        </repository>

        <repository>
            <id>vaadin-prereleases</id>
            <url>https://maven.vaadin.com/vaadin-prereleases/</url>
        </repository>

        <repository>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>vaadin-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/vaadin-snapshots</url>
        </repository>

        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
        
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin</artifactId>
                <version>${vaadin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
        </dependency>
        <!-- Vaadin -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-spring-addon</artifactId>
            <version>1.0.0.alpha7</version>
        </dependency>
        <dependency>
            <groupId>org.vaadin.artur</groupId>
            <artifactId>spring-data-provider</artifactId>
            <version>2.0.0-alpha1</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-charts-flow</artifactId>
            <version>6.0.0.alpha6</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-charts-webjar</artifactId>
            <version>6.0.0-alpha6</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-board-flow</artifactId>
            <version>1.1.0-beta1</version>
        </dependency>

        <!-- override the default versions coming from vaadin-bom/vaadin-webjars-bom -->
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>vaadin-grid</artifactId>
            <version>4.1.0-alpha3</version>
        </dependency>
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>vaadin-valo-theme</artifactId>
            <version>2.0.0-alpha5</version>
        </dependency>

        <!-- End of Vaadin -->
        <!-- Iron and paper elements -->
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>github-com-PolymerElements-iron-form</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>github-com-polymerelements-paper-tabs</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>github-com-polymerelements-paper-styles</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>github-com-polymerelements-paper-ripple</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>paper-toast</artifactId>
            <version>2.0.0</version>
        </dependency>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-juli</artifactId>
                </exclusion>
                <exclusion>
                	<groupId>org.apache.tomcat</groupId>
                	<artifactId>tomcat-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- End Spring -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>com.thedeanda</groupId>
            <artifactId>lorem</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-testbench</artifactId>
            <scope>test</scope>
            <version>6.0.0.alpha1</version>
        </dependency>
    </dependencies>


    <build>
        <!-- The `pluginManagement` section allows listing plugin versions and other global
             configuration in one place. -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>${frontend.maven.plugin.version}</version>
                    <configuration>
                        <nodeVersion>${node.version}</nodeVersion>
                        <yarnVersion>${yarn.version}</yarnVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- (1): Configures the cleanup process for JS dependencies
                and build -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${frontend.directory}/build</directory>
                        </fileset>
                        <fileset>
                            <directory>${frontend.directory}/bower_components</directory>
                        </fileset>
                        <fileset>
                            <directory>${frontend.directory}</directory>
                            <includes>
                                <include>flow-component-renderer.html</include>
                                <include>gridConnector.js</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>lint</id>
            <activation>
                <property>
                    <name>runLint</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>yarn run lint</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <arguments>run lint</arguments>
                                    <workingDirectory>${buildtools.directory}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>production</id>
            <activation>
                <property>
                    <name>vaadin.productionMode</name>
                </property>
            </activation>

            <properties>
                <yarn.build.goal>run build</yarn.build.goal>
            </properties>


            <!-- (2): Makes the package run in production mode when deployed, without the need of setting extra
                      properties on the server -->
            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <!-- (3): Unpack those frontend project dependencies that are embedded into Flow and Flow components
                         JARs so that they can be included into the production frontend build. This step will become
                         unnecessary after switching to the flow-maven-plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>unpack-flow-component-renderer-html</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <!-- flow-component-renderer.html is a dependency of `ComponentTemplateRenderer` -->
                                        <artifactItem>
                                            <groupId>com.vaadin</groupId>
                                            <artifactId>flow-server</artifactId>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <includes>META-INF/resources/frontend/flow-component-renderer.html</includes>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>

                                        <!-- gridConnector.js is a dependency of `Grid<T>` -->
                                        <artifactItem>
                                            <groupId>com.vaadin</groupId>
                                            <artifactId>vaadin-grid-flow</artifactId>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <includes>META-INF/resources/frontend/gridConnector.js</includes>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- (4): copy the JAR-embedded frontend dependencies into the location where they can be picked up
                         by the production frontend build -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-flow-component-renderer-html</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${frontend.directory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/META-INF/resources/frontend</directory>
                                            <includes>flow-component-renderer.html,gridConnector.js</includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- (5): Configures the frontend plugin to compile the web components source -->
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-node-and-yarn</id>
                                <goals>
                                    <goal>install-node-and-yarn</goal>
                                    <goal>yarn</goal> <!-- runs 'install' by default -->
                                </goals>
                                <configuration>
                                    <workingDirectory>${buildtools.directory}</workingDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-polymer-build</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${buildtools.directory}</workingDirectory>
                                    <arguments>${yarn.build.goal}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- (6): Copies the files compiled by polymer-build to a directory from where they can be
                              served when in production mode (root of the WAR) -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <webResources>
                                <resource>
                                    <directory>${frontend.directory}/build</directory>
                                </resource>
                            </webResources>
                            <warSourceExcludes>**/build/,**/bower.json,**/package.json,.bowerrc,src/**,bower_components/**,images/**,frontend/**</warSourceExcludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <jvmArguments>-Dvaadin.frontend.url.es5=context://frontend/build/frontend-es5/ -Dvaadin.frontend.url.es6=context://frontend/build/frontend-es6/ -Dvaadin.productionMode</jvmArguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Moving spring-boot start/stop into a separate profile speeds up regular builds.
             Execute mvn verify -Pit to run integration tests -->
        <profile>
            <id>it</id>
            <activation>
                <property>
                    <name>it</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>pre-integration-test</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>post-integration-test</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <maxAttempts>120</maxAttempts>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.19.1</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <trimStackTrace>false</trimStackTrace>
                            <systemPropertyVariables>
                                <webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <!-- Plugin for automatically download Chrome Driver for tests -->
                    <plugin>
                        <groupId>com.lazerycode.selenium</groupId>
                        <artifactId>driver-binary-downloader-maven-plugin</artifactId>
                        <version>1.0.12</version>
                        <configuration>
                            <!-- root directory that downloaded driver binaries will be stored
                                in -->
                            <onlyGetDriversForHostOperatingSystem>true</onlyGetDriversForHostOperatingSystem>
                            <rootStandaloneServerDirectory>.driver</rootStandaloneServerDirectory>
                            <customRepositoryMap>webdrivers.xml</customRepositoryMap>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>selenium</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <profile>
            <!-- For running Gatling tests -->
            <id>scalability</id>
            <activation>
                <property>
                    <name>scalability</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>io.gatling.highcharts</groupId>
                    <artifactId>gatling-charts-highcharts</artifactId>
                    <version>2.2.5</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.gatling</groupId>
                        <artifactId>gatling-maven-plugin</artifactId>
                        <version>2.2.4</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
